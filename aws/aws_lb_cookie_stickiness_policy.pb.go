// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: aws_lb_cookie_stickiness_policy.proto

package terraform_aws

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type AwsLbCookieStickinessPolicy struct {
	CookieExpirationPeriod int64  `protobuf:"varint,1,opt,name=cookie_expiration_period,json=cookieExpirationPeriod,proto3" json:"cookie_expiration_period,omitempty"`
	LbPort                 int64  `protobuf:"varint,2,opt,name=lb_port,json=lbPort,proto3" json:"lb_port,omitempty"`
	LoadBalancer           string `protobuf:"bytes,3,opt,name=load_balancer,json=loadBalancer,proto3" json:"load_balancer,omitempty"`
	Name                   string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
}

func (m *AwsLbCookieStickinessPolicy) Reset()         { *m = AwsLbCookieStickinessPolicy{} }
func (m *AwsLbCookieStickinessPolicy) String() string { return proto.CompactTextString(m) }
func (*AwsLbCookieStickinessPolicy) ProtoMessage()    {}
func (*AwsLbCookieStickinessPolicy) Descriptor() ([]byte, []int) {
	return fileDescriptor_e5708c49e9d6a730, []int{0}
}
func (m *AwsLbCookieStickinessPolicy) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AwsLbCookieStickinessPolicy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AwsLbCookieStickinessPolicy.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AwsLbCookieStickinessPolicy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AwsLbCookieStickinessPolicy.Merge(m, src)
}
func (m *AwsLbCookieStickinessPolicy) XXX_Size() int {
	return m.Size()
}
func (m *AwsLbCookieStickinessPolicy) XXX_DiscardUnknown() {
	xxx_messageInfo_AwsLbCookieStickinessPolicy.DiscardUnknown(m)
}

var xxx_messageInfo_AwsLbCookieStickinessPolicy proto.InternalMessageInfo

func (m *AwsLbCookieStickinessPolicy) GetCookieExpirationPeriod() int64 {
	if m != nil {
		return m.CookieExpirationPeriod
	}
	return 0
}

func (m *AwsLbCookieStickinessPolicy) GetLbPort() int64 {
	if m != nil {
		return m.LbPort
	}
	return 0
}

func (m *AwsLbCookieStickinessPolicy) GetLoadBalancer() string {
	if m != nil {
		return m.LoadBalancer
	}
	return ""
}

func (m *AwsLbCookieStickinessPolicy) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*AwsLbCookieStickinessPolicy)(nil), "terraform.aws.AwsLbCookieStickinessPolicy")
}

func init() {
	proto.RegisterFile("aws_lb_cookie_stickiness_policy.proto", fileDescriptor_e5708c49e9d6a730)
}

var fileDescriptor_e5708c49e9d6a730 = []byte{
	// 232 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x3c, 0x8f, 0xc1, 0x4a, 0x03, 0x31,
	0x10, 0x40, 0x37, 0xb6, 0x54, 0x0c, 0xf6, 0x92, 0x83, 0x06, 0x84, 0x50, 0x14, 0xa1, 0xa7, 0x5e,
	0xbc, 0x78, 0xb5, 0xe2, 0xcd, 0xc3, 0x52, 0x3f, 0x20, 0x4c, 0xd2, 0x08, 0xa1, 0x69, 0x26, 0x4c,
	0x02, 0xab, 0x7f, 0xe1, 0x6f, 0xf8, 0x27, 0x1e, 0x7b, 0xf4, 0x28, 0xbb, 0x3f, 0x22, 0xc6, 0xb2,
	0xb7, 0xe1, 0xbd, 0x79, 0x03, 0xc3, 0x6f, 0xa1, 0xcb, 0x3a, 0x18, 0x6d, 0x11, 0x77, 0xde, 0xe9,
	0x5c, 0xbc, 0xdd, 0xf9, 0xe8, 0x72, 0xd6, 0x09, 0x83, 0xb7, 0xef, 0xab, 0x44, 0x58, 0x50, 0xcc,
	0x8b, 0x23, 0x82, 0x57, 0xa4, 0xfd, 0x0a, 0xba, 0x7c, 0xfd, 0xc9, 0xf8, 0xd5, 0x43, 0x97, 0x9f,
	0xcd, 0x63, 0xcd, 0x5e, 0xc6, 0xaa, 0xad, 0x91, 0xb8, 0xe7, 0xf2, 0x78, 0xd0, 0xbd, 0x25, 0x4f,
	0x50, 0x3c, 0x46, 0x9d, 0x1c, 0x79, 0xdc, 0x4a, 0xb6, 0x60, 0xcb, 0xc9, 0xe6, 0xe2, 0xdf, 0x3f,
	0x8d, 0xba, 0xad, 0x56, 0x5c, 0xf2, 0xd3, 0x60, 0x74, 0x42, 0x2a, 0xf2, 0xa4, 0x2e, 0xce, 0x82,
	0x69, 0x91, 0x8a, 0xb8, 0xe1, 0xf3, 0x80, 0xb0, 0xd5, 0x06, 0x02, 0x44, 0xeb, 0x48, 0x4e, 0x16,
	0x6c, 0x79, 0xb6, 0x39, 0xff, 0x83, 0xeb, 0x23, 0x13, 0x82, 0x4f, 0x23, 0xec, 0x9d, 0x9c, 0x56,
	0x57, 0xe7, 0xb5, 0xfc, 0xea, 0x15, 0x3b, 0xf4, 0x8a, 0xfd, 0xf4, 0x8a, 0x7d, 0x0c, 0xaa, 0x39,
	0x0c, 0xaa, 0xf9, 0x1e, 0x54, 0x63, 0x66, 0xf5, 0xb7, 0xbb, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x14, 0xe3, 0xbb, 0xc5, 0x04, 0x01, 0x00, 0x00,
}

func (m *AwsLbCookieStickinessPolicy) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AwsLbCookieStickinessPolicy) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.CookieExpirationPeriod != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintAwsLbCookieStickinessPolicy(dAtA, i, uint64(m.CookieExpirationPeriod))
	}
	if m.LbPort != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintAwsLbCookieStickinessPolicy(dAtA, i, uint64(m.LbPort))
	}
	if len(m.LoadBalancer) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintAwsLbCookieStickinessPolicy(dAtA, i, uint64(len(m.LoadBalancer)))
		i += copy(dAtA[i:], m.LoadBalancer)
	}
	if len(m.Name) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintAwsLbCookieStickinessPolicy(dAtA, i, uint64(len(m.Name)))
		i += copy(dAtA[i:], m.Name)
	}
	return i, nil
}

func encodeVarintAwsLbCookieStickinessPolicy(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *AwsLbCookieStickinessPolicy) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CookieExpirationPeriod != 0 {
		n += 1 + sovAwsLbCookieStickinessPolicy(uint64(m.CookieExpirationPeriod))
	}
	if m.LbPort != 0 {
		n += 1 + sovAwsLbCookieStickinessPolicy(uint64(m.LbPort))
	}
	l = len(m.LoadBalancer)
	if l > 0 {
		n += 1 + l + sovAwsLbCookieStickinessPolicy(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovAwsLbCookieStickinessPolicy(uint64(l))
	}
	return n
}

func sovAwsLbCookieStickinessPolicy(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozAwsLbCookieStickinessPolicy(x uint64) (n int) {
	return sovAwsLbCookieStickinessPolicy(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *AwsLbCookieStickinessPolicy) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAwsLbCookieStickinessPolicy
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AwsLbCookieStickinessPolicy: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AwsLbCookieStickinessPolicy: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CookieExpirationPeriod", wireType)
			}
			m.CookieExpirationPeriod = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAwsLbCookieStickinessPolicy
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CookieExpirationPeriod |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LbPort", wireType)
			}
			m.LbPort = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAwsLbCookieStickinessPolicy
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LbPort |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LoadBalancer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAwsLbCookieStickinessPolicy
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAwsLbCookieStickinessPolicy
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAwsLbCookieStickinessPolicy
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LoadBalancer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAwsLbCookieStickinessPolicy
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAwsLbCookieStickinessPolicy
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAwsLbCookieStickinessPolicy
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAwsLbCookieStickinessPolicy(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthAwsLbCookieStickinessPolicy
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthAwsLbCookieStickinessPolicy
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipAwsLbCookieStickinessPolicy(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowAwsLbCookieStickinessPolicy
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowAwsLbCookieStickinessPolicy
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowAwsLbCookieStickinessPolicy
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthAwsLbCookieStickinessPolicy
			}
			iNdEx += length
			if iNdEx < 0 {
				return 0, ErrInvalidLengthAwsLbCookieStickinessPolicy
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowAwsLbCookieStickinessPolicy
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipAwsLbCookieStickinessPolicy(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
				if iNdEx < 0 {
					return 0, ErrInvalidLengthAwsLbCookieStickinessPolicy
				}
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthAwsLbCookieStickinessPolicy = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowAwsLbCookieStickinessPolicy   = fmt.Errorf("proto: integer overflow")
)
